---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { getPublicStations, getUserStations } from '../lib/stations';
import { getCurrentUser } from '../lib/auth';

const posts = await getCollection('blog');
const user = getCurrentUser();
const publicStations = await getPublicStations();
const userStations = user ? await getUserStations(user.uid) : [];
---

<Layout title="CelestiaCom - Inicio">
  <main class="container">
    <section class="blog-section">
      <h1>Últimas Publicaciones</h1>
      <div class="blog-grid">
        {posts.map(post => (
          <a href={`/${post.slug}`} class="card-link">
            <article class="card">
              <h3>{post.data.title}</h3>
              <p>{post.data.description}</p>
            </article>
          </a>
        ))}
      </div>
    </section>

    <section class="stations-section">
      <h1>Estaciones Terrestres</h1>
      
      <div class="stations-grid">
        {publicStations.map(station => (
          <a href={`/stations/${station.id}`} class="station-card">
            <h3>{station.name}</h3>
            <p>{station.description}</p>
          </a>
        ))}
      </div>

      {user && (
        <>
          <h2>Mis Estaciones</h2>
          <div class="stations-grid">
            {userStations.map(station => (
              <a href={`/stations/${station.id}`} class="station-card owner">
                <h3>{station.name}</h3>
                <p>{station.description}</p>
                <span class="badge">Tu estación</span>
              </a>
            ))}
          </div>
          <a href="/stations/new" class="button primary">+ Nueva Estación</a>
        </>
      )}
    </section>
  </main>
</Layout>

<style>
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }
  
  .blog-grid, .stations-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
    margin: 2rem 0;
  }
  
  .card, .station-card {
    background: var(--card-bg);
    border-radius: 8px;
    padding: 1.5rem;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .station-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0,0,0,0.1);
  }
  
  .station-card.owner {
    border-left: 4px solid var(--accent-color);
  }
  
  .badge {
    display: inline-block;
    background: var(--accent-color);
    color: white;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.8rem;
    margin-top: 0.5rem;
  }
  
  .button {
    display: inline-block;
    padding: 0.75rem 1.5rem;
    border-radius: 4px;
    text-decoration: none;
    font-weight: 500;
    transition: background 0.3s ease;
  }
  
  .primary {
    background: var(--accent-color);
    color: white;
  }
  
  .primary:hover {
    background: var(--accent-dark);
  }
</style>