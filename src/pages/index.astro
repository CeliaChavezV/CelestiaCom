---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';

const posts = await getCollection('blog');
---

<Layout title="CelestiaCom - Inicio">
  <main class="container">
    <section class="blog-section">
      <h1>Últimas Publicaciones</h1>
      <div class="blog-grid">
        {posts.map(post => (
          <a href={`/${post.slug}`} class="card-link">
            <article class="card">
              <h3>{post.data.title}</h3>
              <p>{post.data.description}</p>
            </article>
          </a>
        ))}
      </div>
    </section>

    <div id="stations-app">
      <div class="loading-message">Cargando estaciones...</div>
    </div>
  </main>

  <script is:inline>
    document.addEventListener('DOMContentLoaded', async () => {
      try {
        const { initializeApp } = await import('firebase/app');
        const { getFirestore, collection, query, where, getDocs } = await import('firebase/firestore');
        const { getAuth } = await import('firebase/auth');
        
        const firebaseConfig = {
          apiKey: import.meta.env.PUBLIC_FIREBASE_API_KEY,
          authDomain: import.meta.env.PUBLIC_FIREBASE_AUTH_DOMAIN,
          projectId: import.meta.env.PUBLIC_FIREBASE_PROJECT_ID,
          storageBucket: import.meta.env.PUBLIC_FIREBASE_STORAGE_BUCKET,
          messagingSenderId: import.meta.env.PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
          appId: import.meta.env.PUBLIC_FIREBASE_APP_ID
        };

        const app = initializeApp(firebaseConfig);
        const db = getFirestore(app);
        const auth = getAuth(app);

        const publicStationsQuery = query(
          collection(db, 'stations'), 
          where('isPublic', '==', true)
        );
        const publicSnapshot = await getDocs(publicStationsQuery);
        const publicStations = publicSnapshot.docs.map(doc => ({
          id: doc.id,
          ...doc.data()
        }));

        let userStations = [];
        const user = auth.currentUser;
        
        if (user) {
          const userStationsQuery = query(
            collection(db, 'stations'),
            where('ownerId', '==', user.uid)
          );
          const userSnapshot = await getDocs(userStationsQuery);
          userStations = userSnapshot.docs.map(doc => ({
            id: doc.id,
            ...doc.data()
          }));
        }

        const appContainer = document.getElementById('stations-app');
        appContainer.innerHTML = `
          <section class="stations-section">
            <h1>Estaciones Terrestres</h1>
            
            <div class="stations-grid">
              ${publicStations.map(station => `
                <a href="/stations/${station.id}" class="station-card">
                  <h3>${station.name}</h3>
                  <p>${station.description}</p>
                </a>
              `).join('')}
            </div>

            ${user ? `
              <h2>Mis Estaciones</h2>
              <div class="stations-grid">
                ${userStations.map(station => `
                  <a href="/stations/${station.id}" class="station-card owner">
                    <h3>${station.name}</h3>
                    <p>${station.description}</p>
                    <span class="badge">Tu estación</span>
                  </a>
                `).join('')}
              </div>
              <a href="/stations/new" class="button primary">+ Nueva Estación</a>
            ` : ''}
          </section>
        `;
      } catch (error) {
        console.error('Error loading stations:', error);
        document.getElementById('stations-app').innerHTML = `
          <div class="error-message">
            Error al cargar las estaciones. Por favor recarga la página.
          </div>
        `;
      }
    });
  </script>

  <style>
    :root {
      --azul-oscuro: #020c1b;
      --azul-medio: #0a192f;
      --azul-claro: #64d8ff;
      --texto-claro: #e6f1ff;
      --accent-color: #64d8ff;
      --accent-dark: #52b8e0;
      --card-bg: var(--azul-oscuro);
      --card-border: var(--azul-claro);
      --text-secondary: #8892b0;
      --error-color: #ff6b6b;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 2rem;
    }
    
    .blog-grid, .stations-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 1.5rem;
      margin: 2rem 0;
    }
    
    .card, .station-card {
      background: var(--card-bg);
      color: var(--azul-claro);
      border: 1px solid var(--card-border);
      border-radius: 8px;
      padding: 1.5rem;
      transition: all 0.3s ease;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .station-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
      border-color: var(--texto-claro);
    }
    
    .station-card.owner {
      border-left: 4px solid var(--accent-color);
      position: relative;
    }
    
    .station-card h3 {
      color: var(--azul-claro);
      margin-bottom: 0.5rem;
      font-size: 1.2rem;
    }
    
    .station-card p {
      color: rgba(100, 216, 255, 0.8);
      font-size: 0.9rem;
      line-height: 1.5;
    }
    
    .badge {
      display: inline-block;
      background: var(--accent-color);
      color: var(--azul-oscuro);
      padding: 0.25rem 0.5rem;
      border-radius: 4px;
      font-size: 0.8rem;
      margin-top: 0.5rem;
      font-weight: bold;
    }
    
    .button {
      display: inline-block;
      padding: 0.75rem 1.5rem;
      border-radius: 4px;
      text-decoration: none;
      font-weight: 500;
      transition: all 0.3s ease;
    }
    
    .primary {
      background: var(--accent-color);
      color: var(--azul-oscuro);
      border: 1px solid transparent;
    }
    
    .primary:hover {
      background: transparent;
      color: var(--accent-color);
      border-color: var(--accent-color);
    }
    
    .loading-message, .error-message {
      text-align: center;
      padding: 2rem;
      color: var(--text-secondary);
    }
    
    .error-message {
      color: var(--error-color);
    }
  </style>
</Layout>